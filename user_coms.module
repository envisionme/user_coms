<?php

/**
 * Implementation of hook_help()
 */
function user_coms_help($path, $args) {
  if ($path == 'admin/help#user_coms') {
    $output = '<p>Module to enabled admins to filter users who completed their user profiles to different completeness levels and send the e-mail messages to encourage them to complete their profiles.</p>';
    return $output;
  }
}

/**
* Implementation of hook_settings
*/
function user_coms_user($op, &$edit, &$account, $category = NULL) {
  switch($op) {
    case 'form':
      if($category == "account") {
        $form = array();
        $form['user_coms_settings']['receive_reminder_mails'] = array(
          '#type'           => 'checkbox',
          '#title'          => t('Receive mail reminders on profile completion'),
          '#default_value'  => isset($edit['receive_reminder_mails']) ? $edit['receive_reminder_mails'] : 1,
          '#description'    => t('Check this if you want to receive e-mail reminders on profile completion'),
        );
        $user_coms_settings = array(
          '#type'           => 'fieldset',
          '#title'          => t('Profile Content Reminders'),
          '#weight'         => 5,
          '#collapsible'    => TRUE,
        );
        $form['user_coms_settings'] = array_merge($form['user_coms_settings'], $user_coms_settings);

        return $form;
      }
      break;
  }
}

/**
* Implementation of hook_menu
**/
function user_coms_menu() {
	$items = array();

  $items['user_coms/list'] = array(
    'title' => 'Uncompleted Profiles',
    'page callback' => 'user_coms_list_page',
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['user_coms/no_profile_pic'] = array(
		'title' => 'List Users - No Profile Picture',
		'page callback' => 'user_coms_no_profile_pic_page',
    'access arguments' => array('access administration pages'),
		'type' => MENU_NORMAL_ITEM,
	);
	
	$items['user_coms/profile_incomplete'] = array(
		'title' => 'List Users - Profile Incomplete',
		'page callback' => 'user_coms_profile_incomplete_page',
		'access arguments' => array('access administration pages'),
		'type' => MENU_NORMAL_ITEM,
	);

	$items['user_coms/no_profile_video'] = array(
		'title' => 'List Users - No Profile Video',
		'page callback' => 'user_coms_no_profile_video_page',
		'access arguments' => array('access administration pages'),
		'type' => MENU_NORMAL_ITEM,
	);

	$items['user_coms/no_showcase'] = array(
		'title' => 'List Users - No Showcase Items',
		'page callback' => 'user_coms_no_showcase_page',
		'access callback' => TRUE,
		'type' => MENU_NORMAL_ITEM,
	);

  $items['user_coms/no_profile_pic_email'] = array(
		'title' => 'E-mail users - No Profile Picture',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('user_coms_email_body_form'),
		'access arguments' => array('access administration pages'),
		'type' => MENU_NORMAL_ITEM,
	);

  $items['user_coms/profile_incomplete_email'] = array(
		'title' => 'E-mail users - Profile Incomplete',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('user_coms_email_body_form'),
		'access arguments' => array('access administration pages'),
		'type' => MENU_NORMAL_ITEM,
	);

  $items['user_coms/no_profile_video_email'] = array(
		'title' => 'E-mail users - No Profile Video',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('user_coms_email_body_form'),
		'access arguments' => array('access administration pages'),
		'type' => MENU_NORMAL_ITEM,
	);

  $items['user_coms/no_showcase_email'] = array(
		'title' => 'E-mail users - No Showcase Items',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('user_coms_email_body_form'),
		'access arguments' => array('access administration pages'),
		'type' => MENU_NORMAL_ITEM,
	);

  $items['admin/settings/user_coms'] = array(
		'title' => 'User Communications',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('user_coms_settings_form'),
		'access arguments' => array('access administration pages'),
		'type' => MENU_NORMAL_ITEM,
	);

	return $items;
}

/**
* Page Callbacks
*/
function user_coms_no_profile_pic_page() {
  $output .= l('Send E-mail', 'user_coms/no_profile_pic_email');
  $output .= '<p>';
  $result = user_coms_get_query_result('no_profile_pic');
  while($object = db_fetch_object($result)) {
    $print_user = user_load($object->uid);
    if((user_coms_get_last_sent($object->uid) < (time() - (30 * 24 * 60 * 60))) && ($print_user->created < time() - (30 * 24 * 60 * 60))) {
      if (user_coms_user_allows_mail($print_user))
        $output .= 'YES';      
      $output .= theme('username', $print_user).' ('.$print_user->mail.') - '.$print_user->created.'<br />';
    }
  }

  $output .= '</p>';
  $output .= l('Send E-mail', 'user_coms/no_profile_pic_email');

	return $output;
}

function user_coms_profile_incomplete_page() {
  $output .= l('Send E-mail', 'user_coms/profile_incomplete_email');
  $output .= '<p>';
	$result = user_coms_get_query_result('profile_incomplete'); 
  while($object = db_fetch_object($result)) {
    $print_user = user_load($object->uid);
    if((user_coms_get_last_sent($object->uid) < (time() - (30 * 24 * 60 * 60))) && ($print_user->created < time() - (30 * 24 * 60 * 60)) && user_coms_user_allows_mail($print_user)) {
      $output .= theme('username', $print_user).' ('.$print_user->mail.') <br />';
    }
  }

  $output .= '</p>';
  $output .= l('Send E-mail', 'user_coms/profile_incomplete_email');

	return $output;
}

function user_coms_no_profile_video_page() {
  $output .= l('Send E-mail', 'user_coms/no_profile_video_email');
  $output .= '<p>';
  $result = user_coms_get_query_result('no_profile_vid');  
  while($object = db_fetch_object($result)) {
    $print_user = user_load($object->uid);
    if((user_coms_get_last_sent($object->uid) < (time() - (30 * 24 * 60 * 60))) && !avatar_video_attach_has_video($object->uid) && ($print_user->created < time() - (30 * 24 * 60 * 60)) && user_coms_user_allows_mail($print_user)) {
      $output .= theme('username', $print_user).' ('.$print_user->mail.') <br />';
    }
  }

  $output .= '</p>';
  $output .= l('Send E-mail', 'user_coms/no_profile_video_email');

	return $output;
}

function user_coms_no_showcase_page() {
  $output .= l('Send E-mail', 'user_coms/no_showcase_email');
  $output .= '<p>';
	$result = db_query("SELECT * FROM {content_type_uprofile} INNER JOIN {node} ON {content_type_uprofile}.nid = {node}.nid");  
  while($object = db_fetch_object($result)) {
    $print_user = user_load($object->uid);
    if((user_coms_get_last_sent($object->uid) < (time() - (30 * 24 * 60 * 60))) && ($print_user->created < time() - (30 * 24 * 60 * 60)) && user_coms_user_allows_mail($print_user)) {
      if(user_coms_has_showcase($object->uid)) {
        $output .= theme('username', $print_user).' ('.$print_user->mail.') <br />';
      }
    }
  }

  $output .= '</p>';
  $output .= l('Send E-mail', 'user_coms/no_showcase_email');

	return $output;
}

function user_coms_list_page() {
  $output .= '<ul>';
  $output .= '<li>'.l('List Users - No Profile Picture', 'user_coms/no_profile_pic').'</li>';
  $output .= '<li>'.l('List Users - Profile Fields Incomplete', 'user_coms/profile_incomplete').'</li>';
  $output .= '<li>'.l('List Users - No Profile Video', 'user_coms/no_profile_video').'</li>';
  $output .= '<li>'.l('List Users - No Showcase Items', 'user_coms/no_showcase').'</li>';  
  $output .= '</ul>';
  
  return $output;
}

/**
 * Implementation of the admin settings form
 */
function user_coms_settings_form() {

  $form['user_coms_default_no_profile_pic_subject'] = array(
                '#type' => 'textfield',
                '#title' => 'Default e-mail subject for users without a profile picture',
                '#default_value' => variable_get('user_coms_default_no_profile_pic_subject', NULL),
  );
  $form['user_coms_default_no_profile_pic'] = array(
                '#type' => 'textarea',
                '#title' => 'Default e-mail body for users without a profile picture',
                '#rows' => '5',
                '#default_value' => variable_get('user_coms_default_no_profile_pic', NULL),
  );
  $form['user_coms_default_profile_incomplete_subject'] = array(
                '#type' => 'textfield',
                '#title' => 'Default e-mail subject for users who haven\'t completed their profiles',
                '#default_value' => variable_get('user_coms_default_profile_incomplete_subject', NULL),
  );
  $form['user_coms_default_profile_incomplete'] = array(
                '#type' => 'textarea',
                '#title' => 'Default e-mail body for users who haven\'t completed their profiles',
                '#rows' => '5',
                '#default_value' => variable_get('user_coms_default_profile_incomplete', NULL),
  );
  $form['user_coms_default_no_profile_vid_subject'] = array(
                '#type' => 'textfield',
                '#title' => 'Default e-mail subject for users without profile videos',
                '#default_value' => variable_get('user_coms_default_no_profile_vid_subject', NULL),
  );
  $form['user_coms_default_no_profile_vid'] = array(
                '#type' => 'textarea',
                '#title' => 'Default e-mail body for users without profile videos',
                '#rows' => '5',
                '#default_value' => variable_get('user_coms_default_no_profile_vid', NULL),
  );
  $form['user_coms_default_no_showcase_subject'] = array(
                '#type' => 'textfield',
                '#title' => 'Default e-mail subject for users without showcase items',
                '#default_value' => variable_get('user_coms_default_no_showcase_subject', NULL),
  );
  $form['user_coms_default_no_showcase'] = array(
                '#type' => 'textarea',
                '#title' => 'Default e-mail body for users without showcase items',
                '#rows' => '5',
                '#default_value' => variable_get('user_coms_default_no_showcase', NULL),
  );
  $form['user_coms_test_mode'] = array(
                '#type' => 'checkbox',
                '#title' => 'Test mode - Puts the module in test mode.',
                '#default_value' => variable_get('user_coms_test_mode', NULL),
  );
  $form['user_coms_test_email'] = array(
    '#type' => 'textfield',
    '#title' => 'Test E-mail Address - Mails will be sent here if module is in test mode',
    '#default_value' => variable_get('user_coms_test_email', NULL),
  );
  if (module_exists('token')) {
    $form['email_tokens']['token_help'] = array(
      '#title' => t('Replacement patterns'),
      '#type' => 'fieldset',
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
    );
    $form['email_tokens']['token_help']['help'] = array(
      '#value' => theme('token_help', 'node'),
    );
	}


	return system_settings_form($form);
}

/**
 * Implementation of hook_form for capturing e-mail bodies
*/
function user_coms_email_body_form(&$form_state, $uid) {

  //Set forms default value
  switch(arg(1)) {
		case 'no_profile_pic_email':
      $default_value = variable_get('user_coms_default_no_profile_pic', NULL);
      $default_subject = variable_get('user_coms_default_no_profile_pic_subject', NULL);
      break;
    case 'profile_incomplete_email':
      $default_value = variable_get('user_coms_default_profile_incomplete', NULL);
      $default_subject = variable_get('user_coms_default_profile_incomplete_subject', NULL);
      break;
    case 'no_profile_video_email':
      $default_value = variable_get('user_coms_default_no_profile_vid', NULL);
      $default_subject = variable_get('user_coms_default_no_profile_vid_subject', NULL);
      break;
    case 'no_showcase_email':
      $default_value = variable_get('user_coms_default_no_showcase', NULL);
      $default_subject = variable_get('user_coms_default_no_showcase_subject', NULL);
      break;
  }

	$form['#tree'] = TRUE;

  $form['email_subject'] = array(
    '#type' => 'textfield',
    '#title' => 'E-mail Subject',
    '#default_value' => $default_subject,
  );
	
	$form['email_body'] = array(
		'#type'   => 'textarea',
    '#rows'   => '7',
		'#title'  => t('E-mail body'),
    '#default_value' => $default_value,
	);

  if (module_exists('token')) {
    $form['email_tokens']['token_help'] = array(
      '#title' => t('Replacement patterns'),
      '#type' => 'fieldset',
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
    );
    $form['email_tokens']['token_help']['help'] = array(
      '#value' => theme('token_help', 'node'),
    );
	}

	$form['submit'] = array(
		'#type'   => 'submit',
		'#value'  => t('Submit'),
	);

	return $form;
}

/**
* Form submit callback function
*/
function user_coms_email_body_form_submit($form_id, $form_values) {

  $params['email_body'] = $form_values['values']['email_body'];  
  $params['email_subject'] = $form_values['values']['email_subject'];

  switch(arg(1)) {
		case 'no_profile_pic_email':
      $one_mail_sent = FALSE;
      //Run the query to get the e-mail addresses to send to
      $result = user_coms_get_query_result('no_profile_pic');
      while($object = db_fetch_object($result)) {
        $mail_user = user_load($object->uid);
        $params['realname'] = $mail_user->realname;
        $params['first_name'] = $mail_user->field_name;
        $params['username'] = $mail_user->name;
        //Only send e-mail if the user has not received one in the last 30 days
        if((user_coms_get_last_sent($object->uid) < (time() - (30 * 24 * 60 * 60))) && ($mail_user->created < time() - (30 * 24 * 60 * 60)) && user_coms_user_allows_mail($print_user)) {
          //Module running in test mode?
          if (variable_get('user_coms_test_mode', NULL) == 1)
            $send_to = variable_get('user_coms_test_email', NULL);
          else
            $send_to = $mail_user->mail;
          if ((variable_get(user_coms_test_mode, NULL) == 1) && !$one_mail_sent) {
            drupal_mail('user_coms', 'no_profile_pic', $send_to, language_default(), $params); 
            $one_mail_sent = TRUE;
          }
          else if(variable_get('user_coms_test_mode', NULL) == 1) {
            //Do Nothing            
          }
          else
            drupal_mail('user_coms', 'no_profile_pic', $send_to, language_default(), $params);
          //Now add to the db
          //First test if already in db
          $result3 = db_query("SELECT * FROM {user_coms} WHERE uid = %d", $object->uid);  
          if (db_fetch_object($result3)) {
            db_query('UPDATE {user_coms} SET email_status = 1, last_sent = '.time().' WHERE uid = %d', $object->uid);
          }
          else {
            $data = array(
              'uid' => $object->uid,
              'email_status' => 1,
              'last_sent' => time(),
            );
            drupal_write_record('user_coms', $data);
          }
        }
      } 
      drupal_set_message(t('E-mail sent to those without a profile picture'));
      break;
    case 'profile_incomplete_email':
      $one_mail_sent = FALSE;
      //Run the query to get the e-mail addresses to send to
      $result = user_coms_get_query_result('profile_incomplete'); 
      while($object = db_fetch_object($result)) {
        $mail_user = user_load($object->uid);
        $params['realname'] = $mail_user->realname;
        $params['first_name'] = $mail_user->field_name;
        $params['username'] = $mail_user->name;
        //Only send e-mail if the user has not received one in the last 30 days
        if((user_coms_get_last_sent($object->uid) < (time() - (30 * 24 * 60 * 60))) && ($mail_user->created < time() - (30 * 24 * 60 * 60)) && user_coms_user_allows_mail($print_user)) {
          //Module running in test mode?
          if (variable_get('user_coms_test_mode', NULL) == 1)
            $send_to = variable_get('user_coms_test_email', NULL);
          else
            $send_to = $mail_user->mail;
          if ((variable_get('user_coms_test_mode', NULL) == 1) && !$one_mail_sent) {
            drupal_mail('user_coms', 'no_profile_pic', $send_to, language_default(), $params); 
            $one_mail_sent = TRUE;
          }
          else if(variable_get('user_coms_test_mode', NULL) == 1) {
            //Do Nothing            
          }
          else
            drupal_mail('user_coms', 'no_profile_pic', $send_to, language_default(), $params);
          //Now add to the db
          //First test if already in db
          $result3 = db_query("SELECT * FROM {user_coms} WHERE uid = ".$object->uid);  
          if (db_fetch_object($result3)) {
            db_query('UPDATE {user_coms} SET email_status = 2, last_sent = '.time().' WHERE uid = '.$object->uid);
          }
          else {
            $data = array(
              'uid' => $object->uid,
              'email_status' => 2,
              'last_sent' => time(),
            );
            drupal_write_record('user_coms', $data);
          }
        }
      } 
      drupal_set_message(t('E-mail sent to those whos profiles are incomplete'));
      break;
    case 'no_profile_video_email':
      $one_mail_sent = FALSE;
      //Run the query to get the e-mail addresses to send to
      $result = db_query("SELECT * FROM {node} WHERE type = 'uprofile'");
      while($object = db_fetch_object($result)) {
        if((user_coms_get_last_sent($object->uid) < (time() - (30 * 24 * 60 * 60))) && !avatar_video_attach_has_video($object->uid) && ($mail_user->created < time() - (30 * 24 * 60 * 60)) && user_coms_user_allows_mail($print_user)) {
          $mail_user = user_load($object->uid);
          $params['realname'] = $mail_user->realname;
          $params['first_name'] = $mail_user->field_name;
          $params['username'] = $mail_user->name;
          //Module running in test mode?
          if (variable_get('user_coms_test_mode', NULL) == 1)
            $send_to = variable_get('user_coms_test_email', NULL);
          else
            $send_to = $mail_user->mail;
          if ((variable_get('user_coms_test_mode', NULL) == 1) && !$one_mail_sent) {
            drupal_mail('user_coms', 'no_profile_pic', $send_to, language_default(), $params); 
            $one_mail_sent = TRUE;
          }
          else if(variable_get('user_coms_test_mode', NULL) == 1) {
            //Do Nothing            
          }
          else
            drupal_mail('user_coms', 'no_profile_pic', $send_to, language_default(), $params);
          //Now add to the db
          //First test if already in db
          $result3 = db_query("SELECT * FROM {user_coms} WHERE uid = %d", $object->uid);  
          if (db_fetch_object($result3)) { 
            db_query('UPDATE {user_coms} SET email_status = 3, last_sent = %d WHERE uid = %d', time(), $object->uid);
          }
          else {
            $data = array(
              'uid' => $object->uid,
              'email_status' => 3,
              'last_sent' => time(),
            );
            drupal_write_record('user_coms', $data);
          }
        } 
      } 
      drupal_set_message(t('E-mail sent to those who dont have profile videos'));
      break;
    case 'no_showcase_email':
      $one_mail_sent = FALSE;
      //Run the query to get the e-mail addresses to send to
      $result = user_coms_get_query_result('no_profile_vid'); 
      while($object = db_fetch_object($result)) {
        if(user_coms_has_showcase($object->uid) && user_coms_user_allows_mail($print_user)) {
          $mail_user = user_load($object->uid);
          $params['realname'] = $mail_user->realname;
          $params['first_name'] = $mail_user->field_name;
          $params['username'] = $mail_user->name;
          //Module running in test mode?
          if (variable_get('user_coms_test_mode', NULL) == 1)
            $send_to = variable_get('user_coms_test_email', NULL);
          else
            $send_to = $mail_user->mail;
          if ((variable_get('user_coms_test_mode', NULL) == 1) && !$one_mail_sent) {
            drupal_mail('user_coms', 'no_profile_pic', $send_to, language_default(), $params); 
            $one_mail_sent = TRUE;
          }
          else if(variable_get('user_coms_test_mode', NULL) == 1) {
            //Do Nothing            
          }
          else
            drupal_mail('user_coms', 'no_profile_pic', $send_to, language_default(), $params);
          //Now add to the db
          //First test if already in db
          $result3 = db_query("SELECT * FROM {user_coms} WHERE uid = %d", $object->uid);  
          if (db_fetch_object($result3)) {
            db_query('UPDATE {user_coms} SET email_status = 4, last_sent = %d WHERE uid = %d', time(), $object->uid);
          }
          else {
            $data = array(
              'uid' => $object->uid,
              'email_status' => 4,
              'last_sent' => time(),
            );
            drupal_write_record('user_coms', $data);
          }
        }
      } 
      drupal_set_message(t('E-mail sent to those without showcase items'));
      break;
  }
	drupal_goto('user');
}

/**
* Implementation of hook_mail
*/
function user_coms_mail($key, &$message, $params) {

  $message['subject'] = $params['email_subject'];
  $body_string = $params['email_body'];
  $body_string = str_replace('[user_coms:realname]', $params['realname'], $body_string);
  $body_string = str_replace('[user_coms:first_name]', $params['first_name'], $body_string);
  $body_string = str_replace('[user_coms:username]', $params['username'], $body_string);
  $message['body'][] = $body_string;  
}

function user_coms_token_list($type = 'all') {
    $tokens['global']['user_coms:realname'] = t('The user\'s real name');
    $tokens['global']['user_coms:first_name'] = t('The user\'s first name');
    $tokens['global']['user_coms:username'] = t('The user\'s username');
    return $tokens;
}

/**
* Helper functions
*/

function user_coms_get_query_result($key) {
  switch($key) {
		case 'no_profile_pic':
      $result = db_query("SELECT * FROM {content_type_uprofile} INNER JOIN {node} ON {content_type_uprofile}.nid = {node}.nid WHERE {content_type_uprofile}.field_profile_image_list IS NULL");
      return $result;  
    case 'profile_incomplete':
      $result = db_query("SELECT * FROM {content_complete} INNER JOIN {node} ON {content_complete}.nid = {node}.nid WHERE {content_complete}.completeness < 50");
      return $result;
    case 'no_profile_vid':
      $result = db_query("SELECT * FROM {node} WHERE type = '%s'", 'uprofile');
      return $result;
    case 'no_showcase':
      //Do nothing yet...
      break;
  }
  return NULL;
}

function user_coms_get_last_sent($uid) {
  $qresult = db_query("SELECT * FROM {user_coms} WHERE uid = %d", $uid);
  if ($qobject = db_fetch_object($qresult)) {
    return $qobject->last_sent;
  }
  else {
    return 0;  
  }
}

function user_coms_user_allows_mail($user_in) {
  print_r($user_in->receive_reminder_mails);
  if ($user_in->receive_reminder_mails) {
    if ($user_in->receive_reminder_mails == '0')
      return FALSE;
    else if ($user_in->receive_reminder_mails == '1')
      print_r('TRUE');
      return TRUE;
  }
  return TRUE;
}


function user_coms_has_showcase($uid) {
  $result = db_query("SELECT * FROM {content_type_showcase_audio} INNER JOIN {node} ON {content_type_showcase_audio}.nid = {node}.nid WHERE {node}.uid = %d", $uid);
  if (db_fetch_object($result))
    return true;
  $result = db_query("SELECT * FROM {content_type_showcase_document} INNER JOIN {node} ON {content_type_showcase_document}.nid = {node}.nid WHERE {node}.uid = %d", $uid);
  if (db_fetch_object($result))
    return true;
  $result = db_query("SELECT * FROM {content_type_showcase_image} INNER JOIN {node} ON {content_type_showcase_image}.nid = {node}.nid WHERE {node}.uid = %d", $uid);
  if (db_fetch_object($result))
    return true;
  $result = db_query("SELECT * FROM {content_type_showcase_slide} INNER JOIN {node} ON {content_type_showcase_slide}.nid = {node}.nid WHERE {node}.uid = %d", $uid);
  if (db_fetch_object($result))
    return true;
  $result = db_query("SELECT * FROM {content_type_showcase_video} INNER JOIN {node} ON {content_type_showcase_video}.nid = {node}.nid WHERE {node}.uid = %d", $uid);
  if (db_fetch_object($result))
    return true;

  return false;
}
